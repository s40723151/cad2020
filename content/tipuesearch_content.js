var tipuesearch = {"pages": [{'title': 'About', 'text': '這裡是國立虎尾科技大學機械設計工程系大二的電腦輔助設計實習課程網頁.. \n 何謂電腦輔助(機械)設計實習? \n 電腦其實只擅長兩件事, 能夠高速計算, 並且儲存各階段計算所得到的結果. \n 輔助指從旁支撐協助, 藉以提升主體功能. \n 設計是一種安排, 而且應該是竭盡全力, 希望達到盡善盡美的一種安排. \n 機械是一種器物, 而且是各零組件精巧配置運行下, 可以達成特定任務, 發揮設計功能的一種器物. \n 實習包括實驗與練習, 實驗是實際體驗, 而練習則是透過重複操作進行學習. \n 所以該如定義電腦輔助設計實習? \n 課程設計理念 \n 我們為何需要自行設法建構電腦輔助設計系統或系統中的關鍵工具? (為何不直接使用封閉套件, 然後將電腦輔助設計當作電腦輔助繪圖課程來上就好?) \n 我們為何需要利用雲端系統長期保存自己的學習與設計歷程? (為何不直接採用網路硬碟, 把每天的進度檔案用個別目錄分別儲存就好?) \n 我們為何要用程式方法與最佳化設計提升產品開發流程的效能? (為何不直接利用人工的方式進行產品重複設計的資料修改就好?反正台灣薪資低, 人工很好用?) \n 我們為何需要能在任何一台電腦上迅速完成電腦輔助設計工作項目? (為何不直接利用安裝在單一操作系統中的套件就好, 為何要使用全雲端  Onshape \xa0或  Fusion 360  ( 兩者比較 )?) \n 我們為何需要使用 SSL 提交推送近端的設計改版內容? (為何不直接在其他協同組員的面前輸入自己的帳號與密碼就好? 只是上上課為何還需要注重資料保全?) \n 我們為何要將電腦輔助設計室中的電腦網路協定設定為純 IPv6? 然後再負責安裝維護多台 IPv6 與 IPv4 雙協定的代理伺服器, 讓使用者可以連線至目前只支援 IPv4 的服務? (為什麼不直接使用 NAT? 讓 64 台電腦透過一個 IPv4 網址對外連線?) \n 我們為何要自行編寫電子郵件寄送程式, 在成績繳交之前通知個別學員? (而不使用制式封閉源的成績公告系統? 或者乾脆將整班課程紙本學期成績單貼在教師研究室門上就好?) \n 電腦輔助設計牽涉如何利用計算機系統相關技術, 以協助產品設計的創建，修改，分析和最佳化. \n 產品設計的創建牽涉利用參數式繪圖套件建立 3D 零件與組立, 而設計修改可以採人工或程式方法進行, 至於本課程所牽涉的設計分析僅止於將機電系統輸入  CoppeliaSim  進行  Kinematic  與  Dynamic  分析模擬. \n 從 3D 零組件的創建並轉進  CoppeliaSim , 若能採程式方法配合參數化尺寸與組態修改, 並且將資料改版過程採用 Git ( Github ) 或  Fossil SCM  進行分散式版次管理, 或者更近一步設法搭建網際系統以提高設計效能, 將可在分組團隊中採取最佳化同步設計. \n 課程使用工具 \n CAD2020 將在  https://kaggle.com ,  https://colab.research.google.com  以及可攜程式系統上編寫與  Flask  網際程式, 目的是利用  Onshape ,  NX 12,  Solidworks  2017 與  AutoDesk Inventor  2019 設計機電資整合系統所需的零組件後, 可結合  Flutter  手機程式與網際  Python Remote API  程式控制  CoppeliaSim  環境中的 虛擬系統 . \n 以下是 CAD2020 課程進行流程: \n W1 學員填寫基本資料 \n W1 告知將利用  Gitter  與  Discourse  進行課程議題討論 \n https://gitter.im/mdecourse/cad2020 \xa0 \n https://forum.eng.nfu.edu.tw \xa0 \n W1 就電腦軟硬體與網路環境的使用進行介紹 \n W2 學員建立  Github ,  Gitlab,   Heroku ,  Onshape  與  Authorea  帳號 \n Ｗ2 學員利用 Github Pages 與 CMSiMDE 建立個人網頁 \n W2 學員學習如何利用 Git 與 Github 維護個人網頁 \n Ｗ3 統整 W1 與 W2 教材內容至各學員個人網頁 \n Ｗ3 完成亂數分組,\xa0 每班分成四組 \n W4 - W6 Flask on Heroku 與 CoppeliaSim Remote API 程式編寫 \n W7-W9 建立  https://github.com/mdecourse/vrep-api-python  所需零組件 \n Ｗ10 - W14 分組電腦輔助設計專案 \n Ｗ15 - W18 分組總結報告 \n 電腦輔助設計室與協同設計室行事曆 \n 全頁檢視 \n \n', 'tags': '', 'url': 'About.html'}, {'title': '評分', 'text': '電腦輔助設計實習自評與互評表單  (每週課程結束後, 請登入 @gm 後填寫) \n \n (上圖取自\xa0 https://link.springer.com/book/10.1007/978-3-642-03446-6 ) \n 本課程的評分標準: \n \n 從未遲到者得 10% \n 從未缺席且從未無正當理由離席超過 15 分鐘者得 20% \n 從未缺交各週作業且從未抄襲他人作業且從未不當引用網路資料者得 30% \n 作業與報告內容充實, 每一項課程內容都拍攝具參考價值之教學影片者得 20% \n 完成具體且創新之課程內容改進項目, 並能積極協助組員解決各種難題者得 10% \n 個人之倉儲內容, 網頁, 網誌與簡報內容均令人嘆為觀止者得 10% \n \n 根據上述課程評分標準, 由組員之自評成績決定課程期中成績, 視為本課程之學員期望成績, 期中考後, 則依據各週之組員自評成績, 組員互評成績與教師評分成績, 按照下列流程計算學員之學期成績. \n \'\'\'\n根據評分表單中的 自評分數, 互評得分, 教師評分, 計算學員課程成績\n\'\'\'\n# diff 函式傳回兩輸入分數的絕對差值 \ndef diff(分數1, 分數2):\n    return abs(分數1 - 分數2)\n     \n# getHigh函式傳回兩分數中較高者\ndef getHigh(分數1, 分數2):\n    if  分數1 > 分數2:\n        return 分數1\n    else:\n        return 分數2\n\n# getLow 函式傳回兩分數中較低者\ndef getLow(分數1, 分數2):\n    if  分數1 < 分數2:\n        return 分數1\n    else:\n        return 分數2\n\n# 分組評分函式取自評與教師評分比較, 若差距大於 5 分取其低者\n# 否則依自評 40%, 教師 60% 計算\ndef 分組評分(自評分數, 教師評分):\n    return getLow(自評分數, 教師評分)\n    if diff(自評分數, 教師評分) > 5:\n        return getLow(自評分數, 教師評分)\n    else:\n        return int(自評分數*0.4 + 教師評分*0.6)\n\n# 全班比分函式取互評與分組評分比較, 若差距小於 5 分取其高者\n# 否則依互評得分 40%, 分組評分 60% 計算     \ndef 全班比分(互評得分, 分組評分):\n    if diff(互評得分, 分組評分) < 5:\n        學員成績 = getHigh(互評得分, 分組評分)\n    else:\n        學員成績 = int(互評得分*0.4 + 分組評分*0.6)\n    return 學員成績\n\n# 學員之學期成績依照上述分組評分與全班比分函式計算 \ndef 學員成績(自評分數, 互評得分, 教師評分):\n    學員課程成績 = 全班比分(互評得分, 分組評分(自評分數, 教師評分))\n    return 學員課程成績\n\n# 利用迴圈從 50 起每次增量 5 分, 分別列出各評分組合下的成績計算結果    \nfor i in range(10):\n    self_score = 50 + i*5\n    for j in range(10):\n        peer_score = 50 + j*5\n        for k in range(10):\n            teacher_score = 50 + k*5\n            print(self_score, peer_score, teacher_score, "=", 學員成績(self_score, peer_score, teacher_score)) \n', 'tags': '', 'url': '評分.html'}, {'title': '討論區', 'text': 'https://gitter.im/mdecourse/cad2020 \xa0(與電腦輔助設計實習相關) \n https://forum.eng.nfu.edu.tw \xa0(其他議題討論) \n', 'tags': '', 'url': '討論區.html'}, {'title': '分組', 'text': '修課人員名單: \n 四技二甲電腦輔助設計實習: \n https://nfulist.herokuapp.com/?semester=1091&courseno=0788 \n 四技二乙電腦輔助設計實習: \n https://nfulist.herokuapp.com/?semester=1091&courseno=0801 \n', 'tags': '', 'url': '分組.html'}, {'title': 'Python', 'text': 'https://swcarpentry.github.io/python-second-language/ \n https://vpython.org/ \xa0 \n https://github.com/IKMLab/course_material \xa0 \n', 'tags': '', 'url': 'Python.html'}, {'title': 'Open Tech', 'text': 'CMU Open Learning Initiative:\xa0 https://oli.cmu.edu/?s=pathway+open+and+free&post_type=product \n \n P-Tech:\xa0 https://www.ptech.org/open-p-tech/ \xa0 \n The FAIR Guiding Principles for Scientiric data management and stewardship.pdf \n', 'tags': '', 'url': 'Open Tech.html'}, {'title': 'Mechatronics', 'text': 'https://oli.cmu.edu/courses/mechatronics-technology-nsc-stem-pathways-copy/ \n http://cmra.rec.ri.cmu.edu/products/cortex_video_trainer/ \n', 'tags': '', 'url': 'Mechatronics.html'}, {'title': 'PICsimlab', 'text': 'https://lcgamboa.github.io/ \n https://github.com/mdecourse/picsimlab \n', 'tags': '', 'url': 'PICsimlab.html'}, {'title': 'UnoArduSim', 'text': 'https://www.sites.google.com/site/unoardusim/services \n', 'tags': '', 'url': 'UnoArduSim.html'}, {'title': 'Cyber Tech', 'text': 'https://oli.cmu.edu/courses/cyber-technology-nsc-stem-pathways-open-free/ \xa0 \n', 'tags': '', 'url': 'Cyber Tech.html'}, {'title': 'E-vehicle', 'text': 'https://oli.cmu.edu/courses/electric-vehicle-technology-nsc-stem-pathways-open-free/ \xa0 \n', 'tags': '', 'url': 'E-vehicle.html'}, {'title': 'Composite Tech', 'text': 'https://oli.cmu.edu/courses/composites-technology-nsc-stem-pathways-open-free/ \xa0 \n', 'tags': '', 'url': 'Composite Tech.html'}, {'title': 'Topics', 'text': '課程助教: \n 40723150 (lead), 40723110, 40723115, 40723138, 40723148 \n 40723145 (lead), 40723102, 40723103, 40723153, 40723245 \n 40723212 (lead), 40723216, 40723223, 40723246 \n 負責事項: \n 電腦輔助設計室電腦第三磁區系統維護 \n 每週四 19:00 - 21:00 在電腦輔助設計室為操作實習與助教協助回答問題時間 \n', 'tags': '', 'url': 'Topics.html'}, {'title': 'Video', 'text': '本課程所有學員都必須熟悉利用下列工具製作電腦操作過程錄影並協同進行線上直播與錄影: \n ShareX \n 課程進行中的所有操作細節都會利用  ShareX  進行錄影, 並將 mp4 影片檔案放入  cad2020 課程線上教學影片區 , 各學員可以直接利用電腦或手機觀看. \n Google Meet \n https://meet.google.com/ \xa0允許 @gm 用戶進行線上串流對談, 分享電腦操作畫面, 文字留言以及串流影音錄影等功能, 各分組學員必須熟悉如何操作並且在分組後每單數週, 利用  Google Meet  進行線上會議討論與錄影存證. \n Youtube  +\xa0 OBS \n OBS  支援多元的電腦影音來源組合功能, 配合  Youtube  的線上串流直播與錄影功能, 可以讓不參與會議者以文字留言板進行互動或在線上觀看直播.\xa0 各分組學員必須熟悉如何操作並且在分組後每雙數週, 利用  Youtube  +  OBS  進行線上會議討論與錄影存證. \n Wink \n Wink  是一套用來製作電腦操作流程說明用的工具, 之前 2.0 版本的輸出檔案為 Flash swf 檔案格式, 但因各瀏覽器將在  2020 年底停止支援 Flash 播放功能 , 因此目前作者正在測試能夠透過  FFMPEG  輸出 mp4 檔案的版本, 待其正式推出後將可用於課程教學中. \n', 'tags': '', 'url': 'Video.html'}, {'title': 'W1', 'text': 'Notice:\xa0 \n 四設二乙將在  2020-09-25 (週五)  \n 下午4:20 – 下午7:10\xa0 補 10/2 中秋節連假課程時段 \n W1 學員登入學校配發的 @gm 郵件帳號後, \xa0 填寫基本資料 \n W1 告知將利用 \xa0 Gitter \xa0 進行課程議題討論 (其餘各種問題可以至 \xa0 discourse \xa0 討論) \n W1 回想一下與電腦輔助設計室有關的電腦軟硬體架構配置, 以及如何在純 IPv6 環境中設定網路. \n 可以參考大一的課程內容:\xa0 http://mde.tw/cp2020/content/W2.html \n W1 準備在個人的電腦, 筆電或電腦輔助設計室中的電腦 (每班按照學號使用固定電腦, 若電腦故障則必須在一週內負責告知助教, 並將電腦第三磁區複製回原始狀態, 若電腦硬體故障則需回報給助教設法請廠商進行維護, 期間則至使用最後一列備用電腦) 製作合用的可攜程式系統. \n NX 高端電腦輔助機械設計套件 \n 登入 @gm 帳號,  下載 NX12 可攜版 \xa0(949MB) \n NX 12.0.2 官方手冊  https://docs.plm.automation.siemens.com/tdoc/nx/12.0.2/nx_help \n NX 12.0.2 系統自帶的 Python 版本為  3.6.1 , 或許可以相容  3.6.8 \n NXOpen for Python  參考1 ,  參考2 \n Solidworks 中端電腦輔助機械設計套件 \n 登入 @gm 帳號,  下載 SolidWorks 2017 SP2 安裝光碟 \xa0(12GB) \n Solidworks basics.pdf \n SolidWorks_Tutorial08_BearingPuller_English_08_LR.pdf \n https://pypi.org/project/pySW/ \n https://github.com/thunderbirdtr/SWPyMacros \n AutoDesk Inventor 與 Fusion 360 中端電腦輔助機械設計套件 \n 以下連結必須在校園網路、使用學校代理主機或  vpn  模式下才可下載 \n AutoDesk PDSU \xa0(Product Design Suite Ultimate edition) 包含: Autodesk Inventor Professional AutoCAD Mechanical AutoCAD Electrical AutoCAD Navisworks Simulate AutoCAD Raster Design Autodesk Recap Autodesk Vault Basic Autodesk Fusion 360 Navisworks Manage AutoDesk 安裝教學.pdf \n 登入 @gm 帳號,  下載\xa02017_Book_LearnAutodeskInventor2018Basic.pdf \n http://jtdz-solenoids.com/stackoverflow_/questions/47443621/extracting-parameters-from-autodesk-inventor-with-python \n Onshape 雲端電腦輔助機械設計系統 \n 至  https://onshape.com \xa0以 @gm 電子郵箱註冊教育帳號 \n https://cad.onshape.com/help/Content/Primer/onshape_primer.htm \n Solvespace 開源參數式電腦輔助設計套件 \n 至\xa0 https://github.com/solvespace/solvespace \xa0下載原始碼, 自行利用\xa0 https://www.msys2.org/ \xa0編譯使用 \n http://solvespace.com/tutorial.pl \n http://www.farwire.net/SolveSpace-LearningGuide.htm \n 問題: \n 1. 從 NX 至開源的 Solvespace, 每一套各有不同的用法與特色, 為什麼需要從高端套件到開源套件下載這麼多資料? \n 2. 電腦輔助設計實習應該要練習零組件繪圖還是利用電腦執行機電產品設計開發? 還是要深入了解各電腦輔助設計套件的共同原理, 設法從中創造價值? \n 3. 各分組能夠利用 NX, Solidworks, Inventor, Onshape 與 Solvespace 建立下列的所有零件檔案, 並以表格列出各零件的體積嗎? \n Solidworks 零件繪圖練習1.pdf \n Solidworks 零件繪圖練習2.pdf \n 4. 在產品開發過程, 初步的零組件設計完成後, 需不需要進行工程分析? 假如已知\xa0 https://github.com/Range-Software/range3 \xa0與\xa0 https://github.com/NGSolve/ngsolve \xa0等兩套開源 CAE, 我們可以設法分別編譯使用, 並嘗試將分析結果與 Ansys 及 Comsol 進行比較? \n', 'tags': '', 'url': 'W1.html'}, {'title': 'HW1', 'text': '請各分組分別利用 NX, Solidworks, Inventor, Onshape 與 Solvespace 建立下列的所有零件檔案, 並以表格列出各零件的體積. \n Solidworks 零件繪圖練習1.pdf \n Solidworks 零件繪圖練習2.pdf \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'W2', 'text': '所有學員各自利用 @gm 電子郵箱建立 \xa0 Github , \xa0 Gitlab, \xa0 Heroku , \xa0 Onshape \xa0 與 \xa0 Authorea \xa0 帳號 \n Github: 各學員在學號帳號下建立 cad2020 倉儲. \n Gitlab: 各學員將 Github 倉儲 cad2020 同步至 Gitlab 同名倉儲. \n Heroku: 用來部署 cad2020 倉儲中的動態程式或靜態網頁的雲端應用程式服務系統. \n Authorea: 用來建立各組的協同期末專案報告 pdf 檔案. \n 所有學員利用  Github Pages  與  CMSiMDE  建立個人網頁, 倉儲名稱為 cad2020 \n 所有學員學習如何利用  Git  與  Github  維護個人網頁 (以 SSH push 版本請參考 這裡 ) \n NX12 二次開發 \n nxopen_getting_started_v12.pdf \n 由於 NX12.0.2 中的 NXOpen for Python 綁定 3.6.1 版本, 因此為了進行 NX12.0.2 的網際二次程式開發, 特別製作一個可攜的 Python 3.6.8 版本系統, 可以登入 @gm 帳號後,  下載\xa0fall2020_v-1.7z . 或在系上網段直接從  http://a.kmol.info:88 \xa0中下載. \n 各組則由負責建立 Ubuntu 20.04 虛擬主機的組員登入 @gm 帳號後,  下載 Ub2004.vdi .\xa0 或在系上網段直接從\xa0 http://a.kmol.info:88 \xa0中下載. \n', 'tags': '', 'url': 'W2.html'}, {'title': 'W3', 'text': '統整 W1 與 W2 教材內容至各學員個人網頁 \n 完成 亂數分組 ,\xa0 每班分成五組 \n 2a: \n group 1  Repository:  40523148  | Site:  40523148 Repository:  40723136  | Site:  40723136 Repository:  40723151  | Site:  40723151 Repository:  40732331  | Site:  40732331 Repository:  40823114  | Site:  40823114 Repository:  40823116  | Site:  40823116 Repository:  40823119  | Site:  40823119 Repository:  40823121  | Site:  40823121 Repository:  40823124  | Site:  40823124 Repository:  40823128  | Site:  40823128 Repository:  40823129  | Site:  40823129 Repository:  40823145  | Site:  40823145 Repository:  40823150  | Site:  40823150 Repository:  40823154  | Site:  40823154  ============================== group 2  Repository:  40723153  | Site:  40723153 Repository:  40723225  | Site:  40723225 Repository:  40823109  | Site:  40823109 Repository:  40823110  | Site:  40823110 Repository:  40823111  | Site:  40823111 Repository:  40823117  | Site:  40823117 Repository:  40823118  | Site:  40823118 Repository:  40823123  | Site:  40823123 Repository:  40823126  | Site:  40823126 Repository:  40823139  | Site:  40823139 Repository:  40823144  | Site:  40823144 Repository:  40823153  | Site:  40823153 Repository:  40871106  | Site:  40871106  ============================== group 3  Repository:  40823101  | Site:  40823101 Repository:  40823103  | Site:  40823103 Repository:  40823104  | Site:  40823104 Repository:  40823107  | Site:  40823107 Repository:  40823122  | Site:  40823122 Repository:  40823125  | Site:  40823125 Repository:  40823127  | Site:  40823127 Repository:  40823131  | Site:  40823131 Repository:  40823132  | Site:  40823132 Repository:  40823136  | Site:  40823136 Repository:  40823149  | Site:  40823149 Repository:  40823152  | Site:  40823152  ============================== group 4  Repository:  40823102  | Site:  40823102 Repository:  40823106  | Site:  40823106 Repository:  40823108  | Site:  40823108 Repository:  40823112  | Site:  40823112 Repository:  40823115  | Site:  40823115 Repository:  40823120  | Site:  40823120 Repository:  40823135  | Site:  40823135 Repository:  40823140  | Site:  40823140 Repository:  40823142  | Site:  40823142 Repository:  40823146  | Site:  40823146 Repository:  40823148  | Site:  40823148 Repository:  40823151  | Site:  40823151 \n 2a unordered grouping list: \n [[40523148, 40723136, 40723151, 40732331, 40823114, 40823116, 40823119, 40823121, 40823124, 40823128, 40823129, 40823145, 40823150, 40823154], [40723153, 40723225, 40823109, 40823110, 40823111, 40823117, 40823118, 40823123, 40823126, 40823139, 40823144, 40823153, 40871106], [40823101, 40823103, 40823104, 40823107, 40823122, 40823125, 40823127, 40823131, 40823132, 40823136, 40823149, 40823152], [40823102, 40823106, 40823108, 40823112, 40823115, 40823120, 40823135, 40823140, 40823142, 40823146, 40823148, 40823151]] \n 2b \n group 1  Repository:  40723224  | Site:  40723224 Repository:  40823204  | Site:  40823204 Repository:  40823212  | Site:  40823212 Repository:  40823215  | Site:  40823215 Repository:  40823219  | Site:  40823219 Repository:  40823225  | Site:  40823225 Repository:  40823226  | Site:  40823226 Repository:  40823234  | Site:  40823234 Repository:  40823250  | Site:  40823250 Repository:  40823251  | Site:  40823251 Repository:  40832244  | Site:  40832244  ============================== group 2  Repository:  40823211  | Site:  40823211 Repository:  40823213  | Site:  40823213 Repository:  40823214  | Site:  40823214 Repository:  40823222  | Site:  40823222 Repository:  40823229  | Site:  40823229 Repository:  40823230  | Site:  40823230 Repository:  40823231  | Site:  40823231 Repository:  40823236  | Site:  40823236 Repository:  40823242  | Site:  40823242 Repository:  40823245  | Site:  40823245  ============================== group 3  Repository:  40723135  | Site:  40723135 Repository:  40723215  | Site:  40723215 Repository:  40823201  | Site:  40823201 Repository:  40823203  | Site:  40823203 Repository:  40823205  | Site:  40823205 Repository:  40823206  | Site:  40823206 Repository:  40823210  | Site:  40823210 Repository:  40823217  | Site:  40823217 Repository:  40823227  | Site:  40823227 Repository:  40823248  | Site:  40823248  ============================== group 4  Repository:  40823207  | Site:  40823207 Repository:  40823208  | Site:  40823208 Repository:  40823216  | Site:  40823216 Repository:  40823218  | Site:  40823218 Repository:  40823220  | Site:  40823220 Repository:  40823224  | Site:  40823224 Repository:  40823228  | Site:  40823228 Repository:  40823238  | Site:  40823238 Repository:  40823244  | Site:  40823244 Repository:  40823246  | Site:  40823246  ============================== group 5  Repository:  40823202  | Site:  40823202 Repository:  40823221  | Site:  40823221 Repository:  40823223  | Site:  40823223 Repository:  40823232  | Site:  40823232 Repository:  40823233  | Site:  40823233 Repository:  40823235  | Site:  40823235 Repository:  40823237  | Site:  40823237 Repository:  40823239  | Site:  40823239 Repository:  40823241  | Site:  40823241 Repository:  40823247  | Site:  40823247 \n 2b unordered list: \n [[40723224, 40823204, 40823212, 40823215, 40823219, 40823225, 40823226, 40823234, 40823250, 40823251, 40832244], [40823211, 40823213, 40823214, 40823222, 40823229, 40823230, 40823231, 40823236, 40823242, 40823245], [40723135, 40723215, 40823201, 40823203, 40823205, 40823206, 40823210, 40823217, 40823227, 40823248], [40823207, 40823208, 40823216, 40823218, 40823220, 40823224, 40823228, 40823238, 40823244, 40823246], [40823202, 40823221, 40823223, 40823232, 40823233, 40823235, 40823237, 40823239, 40823241, 40823247]] \n', 'tags': '', 'url': 'W3.html'}, {'title': 'W4-W6', 'text': 'Flask  on  Heroku  與  CoppeliaSim Remote API  程式編寫 \n 製作可攜 CoppeliaSim for Windows 10 (登入 @gm 下載  CoppeliaSim 4.1.0 rev1.7z ) \n Introduction to V-rep.pdf \n 登入 @gm \xa0 下載 Heroku cli 可攜.7z , 解開壓縮檔案後, 在 start.bat 中將 Heroku bin 設定指令搜尋路徑, 重新啟動後, 以 heroku version 確定指令可以正常執行後, heroku login 成功後, 登入帳號密碼會存入 home/_netrc 中. 之後便可直接透過 heroku cli 指令直接對遠端主機下命令. \n web_vrep2.7z  (Flask 網際程式控制 CoppeliaSim 中的二輪車) \n https://github.com/mdecourse/good_robot \xa0 \n https://github.com/mdecourse/BaxterHello_V-REP \xa0 \n https://github.com/mdecourse/v-rep-robotics \xa0 \n https://github.com/mdecourse/DDPG_Grasping \xa0 \n https://github.com/mdecourse/vrep-raven2 \xa0 \n https://github.com/mdecourse/arm-suction-sim \xa0 \n https://github.com/mdecourse/mc907-mobile-robotics \xa0 \n https://github.com/mdecourse/vrep-example \xa0(C++) \n \n', 'tags': '', 'url': 'W4-W6.html'}, {'title': 'W7-W9', 'text': '建立\xa0 https://github.com/mdecourse/vrep-api-python \xa0 所需零組件 \n Robotics related scenes:\xa0 https://github.com/CoppeliaRobotics/scenes \xa0 \n', 'tags': '', 'url': 'W7-W9.html'}, {'title': 'W10-W14', 'text': '分組電腦輔助設計專案 \n', 'tags': '', 'url': 'W10-W14.html'}, {'title': 'W15-W18', 'text': '分組總結報告 \n \n', 'tags': '', 'url': 'W15-W18.html'}, {'title': 'CAD', 'text': 'Computer Aided Design 電腦輔助設計牽涉如何利用 計算機系統相關技術 (computer system related technology)，以協助產品設計的創建，修改，分析和最佳化. \n Product design creation 設計創建 \n Product design modification 設計修改 \n Product design analysis 設計分析 \n Product design optimization 設計最佳化 \n \n Integration of CAD, CAE and CAM through the database (1999, Principles of CAD/CAM/CAE Systems, KunWoo Lee \n', 'tags': '', 'url': 'CAD.html'}, {'title': '設計創建', 'text': '零件繪圖 \n Advanced CAD Modeling \n https://link.springer.com/book/10.1007/978-3-030-02399-7 \n 機電傳動與避震機構設計 \n 設計創建流程中的 2D/3D 繪圖, 其建構目的為何? 只是為了溝通表達? 還是有其他目的? \n 設計內容在溝通過程需不需要進行變更修改?設計內容如何修改?由誰修改? \n 設計內容由設計者親自修改與採用計算機程式修改, 有何不同? \n 設計內容一旦修改, 舊版本需要完整保存嗎?如何保存? \n 機械產品一旦發現瑕疵, 需要進行設計變更嗎?有聽過零件 recall 嗎? \n 現在的所謂產品, 只包含機械零件嗎?需要電子感測元件?需要電機驅動元件? \n 為何會產生所謂的客戶關係管理?這跟機械設計工程師有關嗎? \n 產品的規格與品質是原創件者說了算, 還是銷售櫃台的人員說了算? \n 在甚麼情況下, 消費者得以直接面對產品的原始創建者?網路? \n https://github.com/cyberbotics/webots \xa0為何要 open source? \n 從\xa0 https://cyberbotics.com/doc/guide/ \xa0的內容創建, 你看到甚麼? \n 提示:\xa0 https://github.com/cyberbotics/webots/tree/master/docs/guide \n 何謂 Markdown? \n 為何 Webots 的技術手冊要採用 Markdown 格式編寫? \n 為何 Webots 的技術手冊要部署到 Github Pages? \n 參考 \n https://github.com/KmolYuan/Pyslvs-UI/issues/35 \n The Design Invention Machine: A Means of Automating and Investigating Conceptual Design\xa0 \n A graph grammar scheme for representing and evaluating planar mechanisms \n Automatic Design of Planar Mechanism \n', 'tags': '', 'url': '設計創建.html'}, {'title': 'Onshape', 'text': 'https://www.onshape.com/ \n Onshape 入門書 \n https://cad.onshape.com/help/Content/Primer/onshape_primer.htm \n Reference \n https://github.com/mdecourse/V-Rep \n https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g1/ \n https://github.com/scrum-1/scrum_cadp_final/issues \n https://github.com/mdecourse/cadp2018/issues/17 \n https://405232491.gitbooks.io/gitbook_week3/content/week10.html \n \n', 'tags': '', 'url': 'Onshape.html'}, {'title': 'Solidworks', 'text': '下載 Solidworks 2017 安裝檔案 \n \n \n', 'tags': '', 'url': 'Solidworks.html'}, {'title': 'Inventor', 'text': 'AutoDesk Inventor 安裝教學 \n Learn Autodesk Inventor 2018 Basics \n https://link.springer.com/book/10.1007/978-1-4842-3225-5 \n', 'tags': '', 'url': 'Inventor.html'}, {'title': 'NX', 'text': '下載 NX 12 可攜版本 \n NX 12 for advanced users - in a nutshell (德文版) \n https://link.springer.com/book/10.1007/978-3-658-24773-7 \n \n', 'tags': '', 'url': 'NX.html'}, {'title': '設計修改', 'text': '產品設計在何種情況下需要修改? \n 由誰修改? \n 如何修改? \n 修改後的新舊版本內容如何保存? \n 如何完整擷取各階段修改前後的版本資料? \n 存在個人筆記本或電腦上的資料能夠永續保存嗎? \n 寫入藍光碟? \n 每一個版本修改細節如何進行註記? \n 假如涉及修改設計內容的人員多達數十人?數百人?甚至更多? \n \xa0某一產品推出後已經銷售一定數量, 若部分零件因瑕疵修改, 需要全數 recall 還是等故障才回廠維修?假如設計變更零件屬於功能提升, 是否新舊零件都需維護一定數量的備品? \n Onshape 與 SolidWorks 就本質上有何不同? \n 有聽過產品生命週期管理嗎?為何產品需要設定生命週期? \n 某一型的電腦訂出保固五年的意思是什麼? \n 五年內產品一定不會故障? \n 五年內若產品故障, 可以保證修好?一定負責提供所需備料? \n 一台汽柴油車若其生命週期為 20 年, 原廠如何預估各種維修備品的數量?如何定價? \n 聽過 aftermarket spare parts 嗎?\xa0 https://www.swag.de/ \n \n \n', 'tags': '', 'url': '設計修改.html'}, {'title': '設計分析', 'text': 'https://github.com/mdecourse/half-car \xa0 \n half-car_dynamic-analysis.pdf \n Issues: \n 為何需要進行 dynamic analysis? \n 如何進行 dynamic analysis? \n 如何整理 dynamic analysis 結果? \n 如何呈現 dynamic analysis 結果? \n 電腦輔助設計 \n 產品設計只需要奮力畫出最終產品的 3D 零組件即可?各零件的尺寸由誰決定? \n 何謂電腦輔助參數設計?Parametric design?設計為何需要用參數表示零件尺寸? \n 參數設計流程中的參數若其數量高達數百個, 且在設計製造或與客戶溝通過程需要滿足特定約束條件而不斷修改, 此一流程採人工修改好?或者能夠利用計算機程式流程修改? \n 電腦輔助工程分析 \n Apple 設計手機過程需要進行工程分析嗎? \n 電腦輔助製造 \n Apple 為何不自己製造手機? \n', 'tags': '', 'url': '設計分析.html'}, {'title': '設計最佳化', 'text': '', 'tags': '', 'url': '設計最佳化.html'}, {'title': 'Solvespace', 'text': '假如機電產品的零組件能夠直接在網際架構中, 採參數化設計, 並直接將零組件轉為  CoppeliaSim  模型, 並且直接在網際環境中進行控制系統設計分析與模擬, 將可提升電腦輔助產品設計效能. \n 網際 Solvespace Demo:\xa0 https://files.whitequark.org/SolveSpace/solvespace.html \n 網際 Webots:\xa0 https://robotbenchmark.net/ \n 目前還沒有網際  CoppeliaSim , 也無法直接從任何參數式 3D 設計繪圖套件轉存為  CoppeliaSim  或  Webots  模擬組件. \n 可不可能直接將 Solvespace 中的零組件轉成 CoppeliaSim 或 Webots 系統中的模型? 需要那些技術? \n 我們為何需要自行設法建構這些系統或系統中的關鍵工具? \n 我們為何需要利用雲端系統長期保存自己的學習與設計歷程? \n 我們為何要用程式方法與最佳化設計提升產品開發流程的效能? \n 我們為何需要能在任何一台電腦上完成電腦輔助設計工作項目? \n 我們為何需要使用 SSL 提交推送近端的設計改版內容? \n Geometric Constraint Solver: \n http://adventures.michaelfbryan.com/posts/constraints-part-1-expressions/ \n http://adventures.michaelfbryan.com/posts/constraints-part-1-expressions/ \n https://github.com/mdecourse/protractr \n https://github.com/rgov/shape_solver \n https://github.com/rgov/shape_solver \n sketchflat-internals.pdf \n Parametric Dimension: \n https://github.com/mdecourse/solvespace-w-var-dimension \xa0 \n Reference \n https://github.com/KmolYuan/Pyslvs-UI \n', 'tags': '', 'url': 'Solvespace.html'}, {'title': 'Projects', 'text': '各班分為四組, 每一組所完成的 虛擬機電資系統 所屬零組件, 必須分別利用  Onshape ,  NX 12 與  Solidworks  2017 建立後, 轉檔進入  CoppeliaSim  虛擬環境中, 並以部署在  Heroku  中的網際  Python Remote API  程式與  Flutter  手機程式進行控制. \n 各分組的  CoppeliaSim  系統模擬可在電腦輔助設計室中執行. \n 技術分組 \n \n 建立 機電資系統零組件 , 轉為  STL  格式後進入  CoppeliaSim  虛擬環境 \n 在  CoppeliaSim  環境中按照系統運動與動力特性進行組立並模擬 \n \xa0建立  Python Remote API  近端程式, 用於控制  CoppeliaSim  機電零組件 \n 將  Python Remote API  轉為  Flask  網際程式, 並部署於  Heroku \n 利用  Flutter  建立手機 APP, 送出網際訊號與  Heroku  上的 Remote API 互動 \n 各組員利用  Authorea  編寫個人與分組的 pdf 格式期末報告 \n \n Reference \n https://github.com/AtsushiSakai/PythonRobotics \n', 'tags': '', 'url': 'Projects.html'}, {'title': 'Robot', 'text': 'Robotic Systems:\xa0 http://motion.cs.illinois.edu/RoboticSystems/ \xa0 \n Introduction to Robotics:\xa0 https://see.stanford.edu/Course/CS223A \xa0 \n Modern Robotics:  Modern_Robotics-v2.pdf \n http://hades.mech.northwestern.edu/index.php/Modern_Robotics \xa0 \n ABR control library:\xa0 https://github.com/mdecourse/abr_control \xa0 \n https://studywolf.wordpress.com/2017/07/01/abr-control-0-1-repo-public-release/ \n ABR:\xa0 https://appliedbrainresearch.com/ \xa0\xa0 \n Inverse Kinematics \n https://github.com/mdecourse/V-REP-Inverse-Kinematics \xa0 \n \n \n https://github.com/mdecourse/hw01_UR5_coppeliaSim \xa0 \n https://www.haidynmcleod.com/robot-arm-kinematics \xa0 \n inverse_kinematics_solution_of_a_robotic_manipulator_using_python_(two_link).pdf \n inverse_kinematic_analysis_of_robot_manipulators(dissertation_2015).pdf \n https://www.haidynmcleod.com/robot-arm-kinematics \xa0 \n https://github.com/mdecourse/udacity-RoboND-Kinematics \xa0 \n https://github.com/mithi/arm-ik \xa0 \n https://nitishpuri.github.io/posts/robotics/inverse-kinematics-on-kuka-arm-using-ros-and-python/ \xa0 \n https://github.com/mdecourse/RoboND-Kinematics-Project \xa0 \n Design of Electromechanical Robotic System \n https://ocw.mit.edu/courses/mechanical-engineering/2-017j-design-of-electromechanical-robotic-systems-fall-2009/course-text/ \xa0 \n Robot Simulation \n Robot Adventures in Python and C.pdf \n https://github.com/jslee02/awesome-robotics-libraries \xa0 \n Web-based Robot Simulation \n https://robotbenchmark.net/ \n Heroku and Web-based CoppeliaSim \n Flask program on Heroku as Web-based CoppeliaSim \n Heroku server use input form to specify local server ip \n Local Flask use ajax exchanging data with Heroku server \n Local Flask use localhost to communicate with CoppeliaSim \n Machine Learning \n https://github.com/mdecourse/good_robot \xa0 \n', 'tags': '', 'url': 'Robot.html'}, {'title': 'PyRep', 'text': 'PyRep_bring_V-rep_to_Deep_Robot_Learning.pdf \n https://github.com/mdecourse/site-40623128 \n https://github.com/mdecourse/site-40623130 \n https://github.com/mdecourse/site-40623224 \n https://github.com/mdecourse/vrep-volleyball \n https://github.com/mdecourse/V-REP-YouBot-Demo \n https://github.com/mdecourse/PyRep \n https://github.com/mdecourse/vrep-api-python \n https://github.com/doctorsrn/gym_vrep \n https://github.com/mdecourse/gym-vrep \n https://github.com/mdecourse/VREPQuadcopter \n', 'tags': '', 'url': 'PyRep.html'}, {'title': 'Web', 'text': '', 'tags': '', 'url': 'Web.html'}, {'title': 'Flutter-Flask', 'text': 'https://github.com/mdecourse/Flutter-Flask-Login \n 目前的電腦輔助設計流程應該是一個雲端系統, 能夠讓使用者透過多元帳號登入, 並能直接利用瀏覽器, 手機或平板執行產品的協同設計. \n https://wcm.kmol.info:8443/ \xa0(只允許特定用戶登入)\xa0 \n https://mde.tw/cad2020/downloads/msketch \xa0 \n https://mde.tw/cad2020/downloads/jstlviewer \xa0 \n https://mde.tw/cad2020/downloads/robot-designer \xa0 \n 以及  https://onshape.com \xa0都是典型的網際機械設計流程範例. \n 為了培養未來有能力與全球網際協同產品開發整合之人才, 至少必須具備 \n \n 碰到問題能夠自行以英文尋找答案的能力 \n 了解  Fundamentals of Geometry Construction \xa0背後的數學基本原理 \n 有能力運用網際分散式版次系統管理所開發的純文字檔案 (Github 與 Fossil SCM) \n 有能力運用計算機程式與網路架構搭建機械設計流程中的工程服務系統 (Python, C/C++, Javascript 與 Flutter) \n 除了利用 MCAD (Mechanical Computer Aided Design) 建構產品零組件外, 還需要設法透過參數設計與網際應用程式介面修改零組件尺寸與組合方式 (在開源的\xa0 https://github.com/solvespace/solvespace \xa0中搭建 API 程式套件) \n 具備機電資整合系統的設計概念, 能夠在  CoppeliaSim  或  Webots  等模擬系統中進行控制系統設計 (機電資整合系統最佳化工程設計分析) \n \n \n', 'tags': '', 'url': 'Flutter-Flask.html'}, {'title': 'Featurescript', 'text': "https://www.onshape.com/features/custom-features \n Documentation:\xa0 https://cad.onshape.com/FsDoc/ \n Tutorial:\xa0 https://github.com/mbartlett21/featurescript-tutorials/tree/master/slot-tutorials/tutorial-1 \n Featurescript 論壇:\xa0 https://forum.onshape.com/categories/featurescript \n Examples:\xa0 https://github.com/dcowden/featurescript \n Beginner's Guide:\xa0 https://www.onshape.com/videos/the-beginners-guide-to-building-custom-cad-features-in-featurescript-010819 \n 參考 \n http://cadlab.mde.tw/post/onshape-featurescript-cheng-shi-yu-yan.html \n https://cadlab.mde.tw/post/onshape-featurescript-tutorial-dao-yin.html \n http://cadlab.mde.tw/post/search.html?q=featurescript \n", 'tags': '', 'url': 'Featurescript.html'}, {'title': 'Machine Learning', 'text': 'https://github.com/mdecourse/pyrobolearn \n https://github.com/mdecourse/visual-pushing-grasping \n https://github.com/jhu-lcsr/good_robot \n', 'tags': '', 'url': 'Machine Learning.html'}, {'title': 'Pytorch', 'text': 'https://www.kaggle.com/krishanudb/pytorch-tutorial-for-beginners \n https://www.kaggle.com/crilancelo/pytorch-in-kaggle \n https://www.kaggle.com/frtgnn/introduction-to-pytorch-a-very-gentle-start \n', 'tags': '', 'url': 'Pytorch.html'}, {'title': 'Keras', 'text': 'Deep Learning Projects Using TensorFlow 2 \n https://link.springer.com/book/10.1007/978-1-4842-5802-6 \xa0 \n \n', 'tags': '', 'url': 'Keras.html'}]};